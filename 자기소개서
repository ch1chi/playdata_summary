   #자기소개서  ( 프로그램 관련 사항과 역량 및 개발의 경험을 중심으로 )
    저는 플레이데이터에서 6개월 동안 AI 인공지능 반에서 공부를 했습니다. 자바 , 자바스크립트 , 파이썬을 배웠습니다.
  (( 먼저 초반 3개월은 자바을 배웠습니다.  그리고 후반 3개월은 파이썬을 배웠고, 파이썬은 기초 문법 , 크롤링 , 데이터와 시각화 ,  머신러닝 , 딥러닝 등을 배웠습니다. )) 삭제가능
  
  
 삭제 // 제가 해본 작업은 자바스크립트 기반으로 만든 숫자야구입니다. 저는  todo-list(리액트 초반 기술)을 이용할 것이 뭐가 있을까 검색을 해보았고, 
   거기서 숫자야구를 발견하게 되었습니다. 그래서 앞 페이지에는 화면을 게임시작화면을 만들었고, 2번째 페이지에는 숫자야구 플레이하는 것을
   만들었습니다. '숫자야구'만 만들기에는 뭔가 허전해서 응용버젼으로 시작화면을 생성했었는데 1번째 페이지는 뒷배경은 야구장 사진으로 설정하였고,
   앞에는 3문장들이 계속 글이 써지는 것처럼 타이핑을 걸어서 시선 집중할 수 있게 할 수 있지않을까하여 추가해보았습니다. 
   그리고 2번째 페이지에는 숫자야구를 만들어봤는데 숫자야구는 1~9까지의 랜덤 숫자를 4개뽑는 형식으로 숫자4개를 적으면 결과로 맞으면 스트라이크 , 틀리면 아웃으로
   설정을 했고, 4개 다 맞추면 '홈런'으로 만들었다. 또는 10회 틀릴 시 정답을 알려주는 것도 만들었습니다.  기존에 숫자야구가 많이 나와있지만 기존 숫자야구의 틀을 깨지 않았는데
   작업을 마무리하였지만 나만의 규칙으로 색다르게 표현 못한 것이 아쉬움이 남았었습니다. 다음에는 게시판으로 만들 계획입니다.//
   
   -------------------------------------------------------------------------------
   
   장기프로젝트로 저희 조는 미니 게임을 제작했습니다. 계획은 로그인을 통해 게임 스코어 점수에 따라 랭킹, 마일리지을 확인할 수 있게 만들었고
   그것을 알 수 있게 마이페이지까지 구성하려고 했습니다. 추가적으로 각자 다른 곳에서 로그인을 하면  채팅 기능과  1:1 대결을 구현하려고 했으나 소켓을 
   연동하는 것이 잘 되지 않아 결국, 미니게임은 혼자 플레이하고 죽으면 스코어 점수가 뜨며, 그것을 토대로 랭킹에 기록되도록 하는 것이 목표로 수정했습니다.
   우선, 저희 조는 아이디를 만들기 위해서  H2 DB에 저장하는데 성공했고, 또  아이디의 중복성까지 고려해   tokenization(토큰화)까지 만들었습니다.
   그러나 미니 게임을 만들려고 했지만, 테트리스를 클론해 가져왔고 게임과 아이디와의 연동을 하지 못해 결국 아쉬운이 남는 작품이 되었다.
   저는  아이디 제작과 소켓 연동을 담당해왔는데  게임 쪽으로의 소통 연결 고리를 만들어 내는 것의 어려움을 느꼈고, 교육을 받았던 내용과 다른 것을
   짧은 시간 안에 해결하려던 것이 발목을 잡은 것 같아서 팀원에 도움을 주지 못해 미안함이 너무 컸었다. 그래서 새로운 것도 좋지만 배운 내용으로
   응용하는 것으로 다양함을 채우는 것이 나에게도 도움이 되겠단 생각이 들었습니다.
   
   그래서 제가 이번 프로젝트가 끝나서 나서 프로젝트에서 제가 하지않았던 홈페이지와 ID를 만들려고 책을 사서 공부했습니다. 전에 스프링 복습을 할 겸
   MVC , jsp/survlet 을 통해 웹페이지를 만들었습니다.  DB는 H2로 똑같이 연동을 했었고, 조회,삭제,추가까지 하다가 잠시 멈췄습니다.
   저는 홈페이지 개발과 서버 관심이 있어서 추가적으로 형의 도움으로 기업에서  AWS를 공부하는 것을 공유받아 강의를 들었고 이번에 Foundation 시험을 볼 예정입니다.
   하지만 여기 MSA 스쿨에서 클라우드을 적용하는 것을 이론으로 공부했던 것을 여기서 실습해보고 싶습니다.
   
   -----------------------------------------------------------------
   
   (( 삭제첨삭해도 될 내용인듯 + 알파느낌??))
   파이썬으로는 머신러닝과 크롤링으로 '과일 가격 탐색'을 만들어 봤습니다. 크롤링으로 탐색되는 곳은 커리마켓과 G-마켓으로 설정해 두었고,  사진 이미지의 경우는
   keggle.com에 있는 데이터 자료을 수집해와서 사진들을 모든 43개의 종류들을 200개로 설정하고, keras로 컨볼루션을 사용해 인식해놓은 다음 Train , Test로 나누고 나서
   CNN으로 학습시켰습니다 그래서 정확도를 높이는 작업을 거쳐 이미지를 인식하는지 확인 작업을 했습니다. 처음엔 정확도 수치가 낮아서 epoch을 배로 두었고
   과적합까지 확인하려고 val_acc도 포함시켜 확인했었습니다. 그 다음 이러한 전처리 과정을 끝내고 나서 43개의 종류를 딕셔너리로 해놓고 모델링을 예측했더니
   알맞게 나왔었다. 그래서 PIL, 이미지를 처리를 한 후  plt로 화면에 출력해서 확인해봤습니다. 그랬더니 사진이 등장하고, 그 사진의 대상이름이 나왔습니다. 
   그 후에는 Streamit에 배포했습니다. 처음에 과일 이미지를 전처리하는 과정에서 쿨링하고 원핫인코딩을 했었는데 accuracy가 4% 나왔을 때 멘붕이 왔었지만, 모델링의 크기를
   224로 바뀌고 보니 정확도의 수치가 증가하였고,  그 모델링을 저장해 다시 epoch을 2배인 20까지 올려서 학습했더니 정확도의 수치가 89퍼까지 나오게 되었다.
   
   그리고 부트캠프에서 파이널 프로젝트로 마트에서 계산할 때 바코드 없이 opecncv와 yolo v5로 통해 객체 인식과 가격 측정으로 한번에 총액을 뜨게 하는
   기술을 만드는 중입니다.
   
   3가지의 작품을 완성해보았습니다만, 초반에 2개는 게임 관련으로만 제작을 하다보니 만드는데 있어 제약적인 요소가 있었습니다. 하지만 파이썬으로 한 작품에서는 배운 내용으로
   응용해서 만들고 배포까지 해보니 정말 뿌듯했다. 

