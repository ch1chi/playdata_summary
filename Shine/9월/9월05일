오전

오늘은 상위===>하위 컴포넌트를 내려받는 작업
즉 props를 이용하여 부모컴포넌트에서 자식컴포넌트로 내려받기를 원하는 작업을 진행 중이었다.

반대로 자식===>부모로 갈 때는 emit를 사용하여 반대의 상황을 만들어내야한다.

Props --> 그냥 데이터 값을 전달하는 것이 아니라, 특정한 객체, 메서드를 전달하는 속성
정적인 데이터 ==> 반응형 데이터로 진행

컴포지션 API ( 신 ) // 옵션즈API ( 구 )

@ = v-on 이벤트를 받겠다

Eslint 컨벤션 오류
Props = 읽기 전용, 따라서 값이 변하지 않는 형태

Watch - 데이터를 많이 불러올 때 검색 조건에 대한 해당 값을 가져올 때 / API를 통해 데이터를 전달

콜백 - 함수를 받아서 {} 가 없으면 Void로 인식한다

computed - 값을 추적하고 동적으로 추적하는 계산대 목록을 담은 후 값을 저장.

V-if와 V-show 용도 차이
v-if는 평가 값에 따라 DOM 요소를 추가하거나 제거하는 식으로 동작
v-show는 스타일에 display 프로퍼티 값을 변경하는 방식으로 동작

여기서, 프로퍼티란?? ===> 일부 객체 지향 프로그래밍 언어에서 필드(데이터 멤버)와 메소드 간 기능의 중간인 클래스 멤버의 특수한 유형이다. 
                         프로퍼티의 읽기와 쓰기는 일반적으로 게터(getter)와 세터(setter) 메소드 호출로 변환된다.
생명주기 훅 --->> 인스턴스의 생성부터 소멸까지

