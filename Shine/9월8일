9월 8일 아침  김용욱 선임님과의 면담 과정 중
--- 현재 나는 개발자 과정을 수료했지만, 현재 많이 부족한 교육 과정이라 여기서는 더욱 더 노력이 요구되는 상황이라고 전해짐.

변명적인 단어는 하지말자 너무 내 자신도 그닥적인 부분이다.
과제를 풀 때에는 기초적인, 주어진 내용으로만 먼저 해결한 후, 그 후에 응용을 하는 모습을 보여야한다. 너무 응용 동작을 구현하기에는 섣부른 판단이다
그러한 상황은 성급하다. 너무 많은걸 바라지않는다. 침착하게 할 것만 하자 돋보일려고하지말자

느낀 점 : 역시 현재 나의 상태는 주니어 개발자 그자체이다. 최대한 공부를 해야할 것 ( 노력이 많이 필요 )
따라갈만하냐?? ---> 따라갈 만 하다라고 생각하고 있는 상태.  그리고 주어진 글대로 먼저 리스트를 뽑아서 차례대로 해보자!! , 그리고 복사본으로 먼저 진행하자 되돌리기 자주 쓰면 실수하는 것 같다.
----------------------------------------------------------------------------------------
예습 차원적인 느낌으로 메모
정적웹페이지 ---> 저장된 그대로 사용자에게 전달되는 웹 페이지  <> 웹 애플리케이션에 의해 생성되는 동적 웹페이지와는 반대

마크업 언어
--- 문서 내용 중의 요소와 같은 문서 or 다른 문서의 다른 요소와의 연결을 지정
SSR ( server side rendering )
앱을 빌드하기 위한 프레임워크
서버와 클라이언트 모두에서 실행된다는 점,
동형, 범용으로 간주

SPA(싱글페이지 애플레케이션) 과 다른 SSR의 장점
1. 컨텐츠에 도달하는 시간을 단축
2. 유지보수 모델
3. SEO (검색 엔진 최적화)
4. 

DOM이란?? ( Document Object Model )
 웹 페이지의 다양한 구성요소에 접근하여 내용이나 형식 등을 제어할 수 있게 지원하는 인터페이스.

V-if와 V-show 용도 차이
v-if는 평가 값에 따라 DOM 요소를 추가하거나 제거하는 식으로 동작
v-show는 스타일에 display 프로퍼티 값을 변경하는 방식으로 동작

여기서, 프로퍼티란?? ===> 일부 객체 지향 프로그래밍 언어에서 필드(데이터 멤버)와 메소드 간 기능의 중간인 클래스 멤버의 특수한 유형이다. 
                         프로퍼티의 읽기와 쓰기는 일반적으로 게터(getter)와 세터(setter) 메소드 호출로 변환된다.
생명주기 훅 --->> 인스턴스의 생성부터 소멸까지

watch의 첫번째 인자는
반응형 객체, 게터 함수 or 여러 소스의 배열이 될 수 있음

### 깊은 감시자 ###
watch를 직접 호출하면 암시적으로 심층 감시자가 생성되며, 콜백은 중첩된 모든 변경에서 트리거된다.
잠깐, 여기서 트리거란?
---> 미리 정해 놓은 조건을 만족하거나 어떤 동작이 수행되면 자동적으로 수행되는 동작,  DB에서는 유효성 조건과 무결성 조건을 기술하는데 유용함

watchEffect는 동기적 실행 중에만 의존성을 추적합니다. 비동기 콜백과 함께 사용할 때 첫 번째 await 틱 이전에 접근한 속성들만 추적합니다.

watch vs watchEffect
1. watch는 명시적으로 감시된 소스만 추적
2. 콜백은 소스가 실제로 변경된 경우에만 트리거
3. watch는 의존성 추적을 사이드 이펙트와 분리해, 콜백이 실행되는 시기를 보다 정확하게 제어 가능


watchEffect 
1. 의존성 추적과 사이드 이펙트를 하나의 단계로 결합
2. 콜백이 실행되어야하는 시기가 덜 명시적
3. 
