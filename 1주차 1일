1주차 )   인경열  강사님
이메일 : inky4832@daum.net
깃허브 아이디 : github.com/inky4832
  1. 환경 설정
    가) 크롬 설치
    나) 반디집 설치
    디) 오라클 가입
    라) 깃허브 가입

교육과정
1. 자바  ( 2주 배움 예정 )
2. SQL   ( 1주 배움 예정 )
    ===> 미니프로젝트
3. Web ( JSP / Servlet )   ( 2주 배움 예정 )
  ==> 미니 프로젝트 , 쇼핑몰(?)

&&&&&&&&&&&설치 시작 전 &&&&&&&&&&&&
3. 자바 프로그램 개발위한 환경설정
  가. JDK ( 자바 development Kit) 다운
       8u333  ---> u는 업데이트가 자동으로 된다는 뜻
      -설치는 다음과 같다 
      -- jdk ( 개발 환경 )  // ( 개발 도구 포함 )
      -- jre  ( 실행 환경 ) ( Java Runtime Environment )
  나. 자바 오라클
  

 &&&&&&&&설치 중 일 때 &&&&&&&&&&&&&&
* **운영 체제의 환경 변수 설정
   - 환경 변수 확인 방법 
   시작 > 오른쪽 클릭 > 고급 시스템 설정 > '환경변수' 버튼 클릭
 
  - 시스템 변수에 다음 2가지 선택
      JAVA_HOME == C:\Program Files\Java\jdk1.8.0_333  // 자바_홈은 JDK의 홈디렉토리를 의미한다.
     PATH == 패쓰는 명령어의 경로를 지정한다.
     PATH = %JAVA_HOME%\bin;명령어경로;

    PATH 경로의 2가지 명령어
    가) javac.exe   ( compiler 명령어 )
         - 컴파일할 때 사용

    나) java.exe  ( interpreter 명령어 )
         - 실행할 때 사용



   나중에 환경변수 설정 정보 보기 위해서 cmd창에서 확인이 가능하다.

  다. 개발 플렛폼
   - 자바 SE ( Standard Edition )  - 기본 환경 , 비웹 환경 //  Java 개발자를 위한 Eclipse IDE
   - 자바 EE ( Enterprise Edition ) - 웹환경 // Enterprise Java 개발자를 위한 Eclipse IDE(Incubating 구성 요소 포함)
 
 라. 개발 도구(IDE)
   -  이클립스( eclipse ) - 무료  (( 이클립스.org ))
   - 인텔리제이 ( 유료 ) - jetbrains.com


 &&&&&&&&&&&&설치 완료 후 작업&&&&&&&&&&
--한글처리 위한 인코딩 설정 : utf-8

자바의  소스 파일 ( src )
  * 프로그램 작업 순서
     1) 소스 코드 작성
     2) Hello.java   ( 첫문자는 대문자 (필수!!!) .java 도 삽입 필수

     3) javac 컴파일러로 컴파일 실행
        javac  Hello.java ==>>> class 파일 생성  ===> Hello.class가 만들어진다.


     4) javac 인터프리터로 실행
        --- >>  java Hello

     5) 결과 출력

   * JRE System library 
      - 일반 사용자가 개발할 때 도움을 줄 수 있는 오라클에서 제공하는 클래스 파일들(API라고 부른다.  시스템클래스파일)이다.

      -  예)) 수백의 클래스 파일이기 때문에 압축해서 제공한다. 
           (  자바에서 압축 파일 형식 : *.jar  , *.war , *.ear  ) 
      -    API 소스파일 :      C:\Program Files\Java\jdk1.8.0_333 의  src.zip에 있고 
      -API 클래스 파일 :  C:\Program Files\Java\jdk1.8.0_333\jre\lib의   rt.jar   

      - API 문서 : html 제공  
                     https://docs.oracle.com/javase/8/docs/api/index.html
             ----> 8u333 을 들어가서  온라인 문서화를 클릭 한 후 Reference 쪽에서 맨 윗 것을 클릭  ( 즐찾 해놓기 )

 #######################  막간의 상식  ###################
       1)      JAVA의 최소 단위 ----> 클래스
       2) 클래스 안에는        변수   ( 데이터 저장 )
                              메서드  ( 데이터 수정 및 조회 )
,                             생성자  ( 변수의 초기화 )  가   있다.

   6)  클래스 작성
       - 자바 프로그램의 최소 단위
       - 반드시 첫 글자는 대문자!! , 명사형 ( 권장 ) , 공백 X

       - 문법 :  public class  클래스명 {} 
                  반드시  클래스명과  저장할 파일명은 일치해야 한다.

      - 값을 화면에 출력하는 방법은 다음과 같다.
         System.out.println(값); 
         자바는 대,소문자 구별하고 문장의 끝은 반드시 ;  으로 끝나야 한다.
   ################################단축키 ##########################
 
                한줄 복사 ---> Ctrl + Alt + 화살표키
                한줄 삭제 ---> Ctrl + D
                줄 이동 ------> Alt + 화살표 키 
                값 출력 : sysout  입력 후 Ctrl + Space

 7. main 메서드 ------------------------------------자바  배운 내용들-------------------------------------------
  
              ===>시작점 ( starting point ) 역할 , 프로그램당 반드시 하나만 존재해야함.
                          public static void main(String[] args) {} ---------->> 이것이 있어야 한다
          public class Hello {
                                             // main 메서드
	public static void main(String[] args) {
		                                                             // TODO Auto-generated method stub
		System.out.println("Hello world");                    /// 값 (DATA )  문자열들은 ""(쌍따옴표)가 필요함
		                                                               //문자열은 여러개를 의미
		System.out.println( "오치헌" );
	    System.out.println(29);                                          //숫자 ( 정수 )
	    System.out.println('남');                                        //문자  한개짜리는 그냥 ' ' (작은따옴표)를 사용한다.
	    System.out.println(true);                                       //false  ,  논리값
	    System.out.println(200.1);                                      //false  숫자 ( 실수 )
	    System.out.println(""+null);                                     // 값이 없음을 의미   
	}
}


  8. 식별자 ( identifier ) 
      - 의미 ?  =  자바코드의 단어  ex) public , class , Hello 등등  이것들 한 단어들이 다 식별자다
 
      - 식별자 종류 2가지
            가.  시스템 정의 식별자
                    => 시스템이 미리 정해 놓은 단어 ( 틀리게 사용하면 안됨 )
                    => 예약어 ( 키워드 ) 라고 부른다. 
                       ex) public , protected , private , static , final , class , enum , int , byte , interface 
                            short , long , double , float , if , break , continue , switch , case , boolean     등등등


            나.  사용자 정의 식별자
                  => 사용자가 사용할 수 있는 단어
                  => 사용자 정의 식별자로 사용가능한 대상은?  1) 클래스명  - 반드시 대문자 , 명사형 ( 권장 )
                                                                               2) 변수명     - 소문자
                                                                               3) 메서드명  - 소문자
 9 . 리터럴 ( literal )
    - 값 ( 데이터 ) 를 의미 한다.        -----> ★★★★클래스도 포함
     ex))  10  -- 정수형
           3.14 ---실수형 
           'A','남' --- 문자   ★ ( 기본형 )
          "남자"  ----문자열   ★ ( 참조형 )

 
10. 데이터 종류 ( 데이터 타입 ) ★★★★★★★★★★★중요

      가. 기본형 데이터  ( primitive data type )

              1) 수치형  
                               -정수  :     byte     ( 1바이트 )
                                             short    ( 2바이트 )
                                             int       ( 4바이트 )   -기본
                                             long     ( 8바이트 )
        
                              - 실수형  : float     ( 4바이트 )
                                            double  ( 8바이트 )   -기본

              2) 문자형 : char ( 캐릭터 )        ( 2바이트 )   *** 문자열이 아님! , 자바는 문자와 문자열을 다르게 처리함
                                                                             하나의 문자
              3) 논리형 : boolean ( 불린 )      ( 1바이트 )

 ==========>> 총 8개가 제공된다.



      나.  참조형 데이터  ( reference data type )
               ===> 기본형이 아닌 데이터 ( 정수 , 실수 , 문자 , 논리형이 아닌 나머지 데이터 )
