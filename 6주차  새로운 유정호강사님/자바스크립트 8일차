Maven --> Build tool

메이븐이란? 뭘까 ? --> 빌드 툴이다

MouseTest.java  main() 안에서  Syso("Hello"); 작성했음

--> .java --> compiling --> .calss 

javac MouseTest.java  --> 자바 파일 컴파일 해줘
MouseTest.class  --> 파일을 만들어줌

만약 작성하는 java 파일이 여러 개이고, 어떤 특정 파일에서는 외부 라이브러리에 
의존하는 코드들이 있을 경우에는

컴파일러 혼자서 불가능

Build tool

JDBC 할 때
ojdbc6.jar ---> connection , resultset.java

lib 폴더
dendency(의존성)
04. practice papago 프로젝트는 dotenv , express , request 모둘에게 의존
없으면 ?  큰일 난다

pom.xml ---> package.json과 비슷한 역할
pom(project object model) --> 

dry하게 --> do not repeat yourself

frog --> 유연함(flexibility), 견고함 , 확장 가능성, 

pom.xml은 xml표기법으로 쓴 것 뿐

controller --> 프론트 직원 ( 분기만 시켜주고 있음 )
Service -->  비지니스 로직 ( 병원 , 금융 )
DAO  -->  Data Access Object , DB에 접근해서 데이터 전달해주는 역할
DTO  --> Data Transfer Object 
Model --> Domain 

객체지향
다형성  - 인터페이스
캡슐화  - 정보 은닉
공통적인 속성과 기능을 뽑아낸다 --> 추상화
상속     - 

사람이라는 개념은 실체한다? --> x 왜냐면  꼭 집어서 말을 할 수 없기 때문에
 --->> 일반적으로 실체하지 않는 개념으로 class를 설게

**** 주소값이 다르다

Analyzer --> 분석기, 분석하는 기계
Parser -> 파싱하는 기계 ( 역할 )

객체라는 것도 객체가 혼자만 존재하면 큰 의미가 없음
--> 갈라파고스

객체 간 협력
---> 데이터의 흐름 ( 처리 과정 )

Analyzer 클래스에서 parseLinesFromTSV()를 호출한다는 것은
어떤 객체가 다른 객체에게 메세지를 전송하는 것

파싱 다했습니다~ 여기 결과물입니다
--> List<BankTransaction> bankTransactions

상속 --> extends

구성(Composition)

Analyzer 클래스의 멤버 필드
어떤 클래스의 구성원 ( Member )

구성원 : 필드와 메서드 ( 속성과 기능( 행위 ))
field (변수 or 상수)

field : RESOURCES 
method : main() , calculateTotalAmount()
selectMonth()

응집도(cohesion) : 코드와 품질과 관련된 특성 중 하나
클래스나 메서드의 책임 ( 관심사 , 역할 )
서로 강하게 연결, 연관 되어 있는 정도

TSVParser 클래스는 내부 응집도가 높은 편
응집도는 높은 응잡도를 가지는 것이 이상적 - SRP 

결합도(Coupling) : 코드의 품질에 영향을 미치는 또 다른 요인 중 하나,
응집도와 같이 짝으로 활용되는 편

응집도 : 클래스 , 패키지 , 메서드 등의 동작이 서로 얼마나 관련되어 있는지를 나타내는 척도
결합도 : 하나의 기능이나 클래스가 다른 클래스에 얼마나 의존하고 있는지를 나타내는 척도
--> 특정 클래스를 구현하는데에 얼마나 많은 클래스들을 의존하고 있는지로 가늠할 수 있음

Analyzer.jajva 클래스를 구현하기 위해서는
1. 파입 입출력 ( 데이터 읽기 )
2. 파싱 처리 ( TSVParser.java )--의존   -new TSVParser();
3. 연산 처리 ( Processor.java )-- 의존   -new Processor();
4. 결과 출력 처리 

java 객체 지향의 코드 맥락에서 의존하고 있다는 건 new 연산자들 사용하는 부분이라고 보면 된다.

---> 의존하는 부분이 많을수록 코드의 변경에 용이하지 않고, 유연성이 떨어짐

이상적인 방식
--> 클래스 혹은 메서드, 패키지 내부 응집도는 높게, 
       서로 다른 클래스들 간의 결합도는 낮게
------------------------------------------------------------------------------------

입출금 내역 데이터 ( bank-data-simple.txt )
KB - TSV 파일로 제공
신한 - CSV 파일로 제공
카카오 뱅크 - Json파일로 제공

추상화와 인터페이스

     TSV, CSVParser.java는 BankStatement 인터페이스를 구현한 구현체 or 구현 클래스라고 함
