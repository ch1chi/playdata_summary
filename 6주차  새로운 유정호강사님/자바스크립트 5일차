const textAreaArray = document.getElementsByClassName('Card__body__content');

// 변수 네이밍 컨벤션, 도메인과 관련된 용어를 미리 정의
// source: 번역할 텍스트와 관련된 명칭(안녕하세요를 번역하고 싶으면, 안녕하세요가 source)
// target: 번역된 결과와 관련된 명칭

const [sourceTextArea, targetTextArea] = textAreaArray; // [왼쪽 텍스트영역, 오른쪽 텍스트영역]
const [sourceSelect, targetSelect] = document.getElementsByClassName('form-select');

// 번역하고자 하는 언어의 타입(ko? en?, ja?)
let targetLanguage = 'en'; // 기본값으로 en

// 어떤 언어로 번역할지 선택하는 target selectbox의 선택지의 값이 바뀔 때마다 이벤트를 발생하도록, 지정한 언어의 타입 값을 targetLanguage 변수에 할당, 출력
// change 이벤트 사용, selectbox 객체가 가지고 있는 프로퍼티 활용
targetSelect.addEventListener('change', () => { 
    const targetValue = targetSelect.value;
    targetLanguage = targetValue;
    
    // // 제가 한 방법
    // const selectedIndex = targetSelect.selectedIndex;
    // targetLanguage = targetSelect.options[selectedIndex].value;
});

let debouncer;
sourceTextArea.addEventListener('input', (event) => {
    if(debouncer) { // debouncer 변수에 값이 있으면 true, 없으면 false
        clearTimeout(debouncer);
    }

    // setTimeout(콜백함수, 지연시킬 시간(ms))
    // 콜백함수 : 지연된 시간 후에 동작할 코드
    debouncer = setTimeout(() => {
        const text = event.target.value; // sourceTextArea에 입력한 값
        console.log(text);
    }, 3000);
});



프론트엔드 : 더 나은 사용자 경험을 제공하기 위함
백엔드  :  보다 안정적인 처리를 통해 시스템 안정성 증대


NPM --> 노드 패키지 매니저
패키지 --> JS파일들이 모여있는 묶음
매니저 -->  그런 묶음 폴더들을 관리해주는 사람

누군가가 JS 기반으로 여러 편의 기능들을 라이브러리의 형태로 개발해서 패키지로 묶고 , 다른 사람들도 사용할 수 있도록 공개
그런 라이브러리들을 검색, 설치해서 사용할 수 있는 사이트 , npmjs.com 


--> 일련의 자바스크립트 코드들이 패키지의 형태로 구성되어 있음

04.practice folder : Node.js 기반의 프로젝트 root 폴더
package.json

--> npm으로 시작하는 명령어들을 사용할건데,
ex) npm install express

rpm으로 시작하는 명령어를 쓰기 위해서는
package.json 파일이 위치한 경로에서만 명령어 사용이 가능

express fw를 설치할 때 express 프레임워크를 사용하기 위한
하위 라이브러리들과의 의존 관계에 대한 정보들을 명시

