*********  조인 ( join )

개념 : 필요한 데이터가 여러 테이블에 존재할 경우  ---> 테이블을 연결 ( 조인 )

            해서  select 하자

      select 기능   --- projection ( 열 기능 )
                    --- selection  ( 행 기능 )
                    --- join
  
  
  1.  오라클 조인             cartesian product     ---       조인 조건을 생략하거나 조인이 잘못된 경우에 발생된다.
                                   equi 조인        ---       기본키(Primary Key)와 참조키(Foreign Key)을 사용하여 반드시 조건이 일치하는 데이터만 조회하는 방법이다. 
                               non-equi 조인        ---       조건이 반드시 일치하지 않더라고 범위에 포함되는 경우에 조회하는 방법이다.
  
    
  2.  ANSI  조인               cross                ---        조인오라클 조인의 cartesian product와 동일한방법이다.
                               natural 조인         ---        오라클 조인의 equi 조인과 동일하며 자동으로 두 개의 테이블에서 일치하는 컬럼을 찾아서 조인된다.
                               using(컬럼)          ---        오라클 조인의 equi 조인과 동일하며 명시적으로 일치하는 컬럼을 작성한다
                               join ~ on절          ---        오라클 조인의 non-equi 조인과 동일한 조인 방법이다. on절에 조인조건을 명시한다.
              left | right | fullouter 조인         ---        오라클 조인의 outer 조인과 동일한 방법이   
                              self                  ---        조인 오라클 조인의 self 조인과 동일한 방법이다.
   
  
  
  가.  equi 조인
  
      --->  가장 많이 사용되는 조인 방법으로 조인 대상이 되는 두 테이블에서 공통적으로
            존재하는 컬럼의 값이 반드시 일치하는 행을 연결하여 데이터를 반환하는 조인
           
            But, SELECT절에 사용된 컬럼은 양쪽 테이블에 모두 존재하는 컬럼이 아니기때문에 컬럼명 앞에
                 테이블명을 지정하지 않아도 되며 FROM절에는 접근할 테이블명을 , (쉼표)를 사용하여 나열하면 된다.
                 WHERE절에는 두 테이블의 공통 컬럼을 조인 조건으로명시해야 된다.
            
            -------->> 조인 조건을 명시하지 않으면 이상한 데이터로 반환될 가능성 있음.
                         그래서 여러개( n개 ) 를 조인하려면 n-1 조인 조건을 써야함.
            
  
  ########   테이블에 별칭(alias) 사용         ############
        SELECT절에서 컬럼 별칭(alias)을 사용할 수 있듯이 FROM절에도
         테이블 별칭(alias)을 사용할 수 있다.
  
 
 
  나. 1. ANSI 의 Cross 
          ---> 조인은 조인할 때 일치하는 데이터만 반환하지 않고 조인하는 각 테이블의
               행 개수를 서로 곱한 결과가 반환된다
    
      2. USING(컬럼) 절
      
         --->  Natural 조인 사용시 만약 두 개 이상의 공통 컬럼이 있다면 오류는 아니지만
               엉뚱한 실행결과가 출력된다
 
      3.  ON 절
         --->   Natural 조인이나 USING 절은 조인할 때 내부적으로 공통 컬럼값이
                반드시 일치하는 Equi조인 형식으로 실행된다.
                만약 Non-Equi 조인이나 임의의 조건으로 조인할 경우에는 ON절을 사용해야 된다.
       
 
 
   &&&&&&&&&&&&&&&&     최종 요약      &&&&&&&&&&&&&&&&&    

종류 :  오라클 조인 -->  1. pk , fk 일치된 경우의 조인  ==> equi 조인 ( 동등 조건 100% 느낌  )
                                  ((  값이 반드시 일치 ))
                          
                         2. 범위 조인 : non-equi 조인 ( 부분적으로 일치하면 됨 )  ( 부등호연산자 ( > , < ), 범위 )
                         3. 자신 조인 : self 조인 ( 자기가 자신을 조인 )
                        
                         1,2,3은  일치하는 경우만 조인됨 (( inner 조인 ))  ---> inner는 + 연산자도 포함
                         
                         outer 조인 : inner 조인 + 누락된 데이터까지 반환하는 것 , (+) 연산자 ,  (+)를 지정한 반대쪽 table를
                                                                                                 모두 출력하는 방법의 한쪽 table에서만 사용 가능


         ANSI  조인 -->   1. 오라클 조인 동일  ( left outer 조인 키워드 , right 조인 키워드 , full 조인 키워드 )
                          2. natural join : 공통 컬럼은 찾아서 equi 조인한다.
                                            주의 할 점은 공통 컬럼 사용시 별칭/tabel명 사용 불가.
   2,4,5번은 inner 조인                           
                          3. cross join : 쓰레기 
                          4. using( 공통 컬럼명 ) : 공통 컬럼으로 equi 조인 , 가독성은 높다. 
                                                    주의 할 점은 공통 컬럼 사용시 별칭/tabel명 사용 불가.
                          5. on 조건식 : 부등 연산자 활용한 조인시 
                          6. outer 조인 : left outer 조인 키워드 , right 조인 키워드 , full 조인 키워드
                          
   &&&&&&&&&&&&   ANSI 애들은 모두 from 절에 쓰임( 단,검색 조건에서는 where절 사용 ) &&&&&&&&&&&&                
                          
                          
 조인의 종류
 
    1. inner 조인 : 조인 조건과 일치하는 data만 반환 ( 일치하지 않으면 누락 , 반환 x )
    
    2. outer 조인 : 일치하지 조회가 가능
 
  
