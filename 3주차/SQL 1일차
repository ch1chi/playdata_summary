-- SQL 주석문은  -- 이걸로 하는 것이다.

-- hr 계정 Lock을 풀고 비번을 설정

-- SQL은 대,소문자를 가리지 않는다  자바랑  다르다.


show user;  --->  사용자를 확인할 때 쓰임


alter user hr
identified by hr  account unlock;



-- 워크샵에서 사용할 계정을 생성한다. 그리고 권한을 할당

drop user workshop;    --> 삭제할 때 쓰임.

create user workshop
identified by workshop;

grant resource, connect    --> 권한을 주는 것
to workshop;




hr 계정은  문법을 정리하는 계정으로 사용할 것이다.
workshop 계정은  말그대로 워크샵을 할 때 쓰일 계정.


****  EMPOLYEE  ****
★★★★  공백으로 보이는 것은 착각이다 모두 __ 이런 아래 언더바로 표시된 형태다.  ★★★★


세로 줄은  칼럼 ,, 가로줄은  레코드 

표에서 비어있는 곳은  NULL값이다  NULL(값이 없다.)라는 의미다.  0이랑 다름 !!!!

**********  제약조건 ( 암기 ) ***************
primary key  --   레코드를 식별하기 위한 용도. 내부적으로 unique제약조건과 not null   제약조건을 포함한다.
                  자동으로 인덱스(index)가 생성됨
unique       --   컬럼에 유일한 값을 저장하기 위한 용도. null 값 포함 가능. 자동으로 인덱스(index)가 생성됨. 
not null     --   컬럼에 반드시 값을 저장해야 하는 용도. ( NULL값 허용 x )  애초엔 기본적으로는 NULL이 허용됨 )
check        --   자바의 조건처리와 비슷한 제약 조건 , 컬럼에 임의의 조건에 일치하는 데이터만 저장하기 위한 용도.
                  예>> 학년이 1학년만 저장, 성별이 ‘남’ 만 저장등
foreign key  --   하나의 테이블에서 다른 테이블을 참조하기 위해 사용되는 용도로서 ‘참조키’,‘외래키’ 라고 부른다.
                  EMPLOYEE ( 사원 )                                  departments ( 부서 )
                  
                  child 테이블       ------------------>>            master 테이블 
                  이쪽의 foreign key(외래키,참조키)는  
                  master의 컬럼 중에서 primary 키또는
                  unique 제약 조건에서 설정된 컬럼을
                  참조할 수 있다.


1.   SQL 문 종류

가. Data Query Language(DQL:질의어)  =    SELECT(데이터 검색시 사용)

나. Data Manipulation Language       =    INSERT(데이터 입력)            ** 기본적으로 메모리에서만 동작이 발생한다.
    DML:데이터 조작어)                    UPDATE(데이터 수정)
                                          DELETE(데이터 삭제)
                                          MERGE(데이터 병합)
 
다. Data Definition Language         =    CREATE(데이터베이스 객체 생성)
    (DDL:데이터 정의어)                    ALTER(데이터베이스 객체 변경)
                                          DROP(데이터베이스 객체 삭제)
                                          RENAME(데이터베이스 객체이름 변경)
                                          TRUNCATE(객체 정보 절삭)
 
라. Transaction Control Language      =   COMMIT(트랜잭션 작업 반영)
     (TCL:트랜잭션 처리어)                ROLLBACK(트랜잭션 작업 취소)

마.  Data Control Language            =   GRANT(권한 부여)
     (DCL:데이터 제어어)                  REVOKE(권한 취소) 
  
  
  
  ****   오라클 객체를 만드는 5가지 ( '다.' 의  CREATE 부분 ) ****
  
  1. 테이블 ★★★★( DDL을 이용 )       - 실제 Data 저장
  2. 인덱스                             -  검색을 빠르게 해준다. 일반 교재의 색인표           <테이블>
  3. 뷰 ( 테이블의 helper 역할 ) <창>   -  보안 + 복잡한 SQL 문을 간결하게 사용하는 목적      <테이블>
  4. 시퀀스 ( 오라클  )                 -  특정 컬럼 넘버링 ( ex)) 게시판의 글 번호 같은 것 )
  5. 시노닝                             -  테이블의 별칭을 사용 ( 왜냐면 보안을 위해서 )
                                          
                                          
  ****  Data Type ****
  
    - 수치 [정수]  : number ( 자릿수 )
    - 수치 [실수]  : number ( 전체 자릿수 , 소수정 )
    
    문자(열)  -- char     ( byte수 )    --> 고정 길이  ( String )    --- 성능이 우수 
              -- varchar2 ( byte수 )    --> 가변 길이  ( Stringbuilder )   -- 메모리 효율이 우수
                                          
             ex ))  char(4) 면    영문자는 4글자 , 한글은 2글자    
                    varchar2(4)면 영문자는 4글자 , 한글은 2글자
                    
                    남,녀는 char(1) 로 설정 가능 , 왜냐면 고정된 값이여서 그렇다.
                    
                    
                                       
                                          
    
