
**** 세션 관리   (  세션...  '메모리' 의 뜻이기도 하다 )
--> 

브라우저 ---1. 요청    ----서블릿 --->  2. 실행
           3. 응답  <---  서블릿
           
           
           현재 페이지에서  생성된 Data는  이후의 패이지에서 사용 불가
           (jsp/servlet)
           ---> 끊어지지않는것처럼 서로 연결하는 것이?? ==>  세션 관리 !!
           
      세션이란? --> 서버에 저장하는 것
      
      클라이언트에 저장하는 것은? ===> '쿠키' API 
      
***  세션 관리
1. 개요
2. 구현 방법  
   가.  서버에 저장 :  세션 ( httpSession API )
   나.  클라이언트에 저장 : 쿠키 ( Cookie API )
   
   
   브라우저                     Tomcat 
   
                                 A 
                                 
                                 B
                                 
  세션 얻기 : HttpSession session***.getsession();
    
    a = () = session.getAtrribute( "X");
    
    
    %%%  Null ( x ) ==> ' A ' 를 거침  .  정상적인 요청 방식이다.
         Null ( o ) ==> 'A'를 거치지 않고 B를 요청하는 방식  ex) 장바구니를 담았더니 로그인을 하라더라 ( 빠꾸하는 방식 )
         
   브라우저  lifecycle  가  같다? ---> 브라우저를 저장안해도 보안때문에 타임아웃을 저장한다. (기본 30분 지나면)4
   
   
   ************ 세션 관리
   쿠키 ( cookie )
   
   ---> 문자열만 저장. ( 사이트) 당 최대 300개 저장
   
     단점 : 사용자가 쿠키 사용을 비활성화 할 수 있다. ---> 그렇게 된다면 저장이 안돼 ! 
     
     
     1. 브라우저가 요청한다.
     2.  서버에는 'A' 와 'B' 가 있다.  'A'에서 쿠키 생성(문자열)을 하고 실행을 하는데 
           쿠키생성은  cookie c = new cookie ( key , value )
           reponse.addcookie (c);  
           
           
           여기서,  'B' cookie x = request.getcookie();  
           
           xx.getvalue 호출
     3.  쿠키를 통해 브라우저에 응답한다.
     4.  파일에 저장하면 비휘발성이고,  브라우저에 저장하면 휘발성이다. (( 브라우저가  timeout이 적용!! )) & 변수임.
     
     
     
     
     
     
     
   
           
